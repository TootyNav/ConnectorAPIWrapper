// <auto-generated />
using System;
using Connector.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Connector.Migrations
{
    [DbContext(typeof(ConnectorContext))]
    [Migration("20240114141917_AddProviderSummaryTable")]
    partial class AddProviderSummaryTable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Connector.Models.Entities.Provider", b =>
                {
                    b.Property<string>("ProviderId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BrandId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BrandName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTimeOffset>("CachedOnDate")
                        .HasColumnType("datetimeoffset");

                    b.Property<string>("CharityNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CompaniesHouseNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Constituency")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InspectionDirectorate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastInspection")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocalAuthority")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LocationIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MainPhoneNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("OnspdLatitude")
                        .HasColumnType("float");

                    b.Property<double?>("OnspdLongitude")
                        .HasColumnType("float");

                    b.Property<string>("OrganisationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OwnershipType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddressCounty")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddressLine1")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddressLine2")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalAddressTownCity")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PostalCode")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Region")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationDate")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RegistrationStatus")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Type")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Uprn")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Website")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProviderId");

                    b.ToTable("Provider");
                });

            modelBuilder.Entity("Connector.Models.Entities.ProviderSummary", b =>
                {
                    b.Property<string>("providerId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("providerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("providerId");

                    b.ToTable("ProviderSummary");
                });
#pragma warning restore 612, 618
        }
    }
}
